class Node:

    def __init__(self,data):

        self.data = data
        self.next = None

class Circular:

    def __init__(self):

        self.head = None

    def push(self,data):

        new_node = Node(data)

        temp = self.head

        new_node.next= self.head

        if self.head is not None:

            while(temp.next!=self.head):

                temp = temp.next

            temp.next = new_node
        else:

            new_node.next = new_node

        self.head = new_node

    def printList(self):
        
        temp = self.head
        if self.head != None:
            
            while True:
                
                print("%d" % (temp.data), end=' ')
                temp = temp.next
                if temp == self.head:
                    
                    break

    def split(self,head1,head2):

       slow = self.head
       fast = self.head

       if self.head is None:
           return

       while(fast.next!= self.head and
             fast.next.next!= self.head):
           
           fast = fast.next.next
           slow = slow.next

       if fast.next.next == self.head:
           

           fast = fast.next

       head1.head = self.head

       if self.head.next!= self.head:

           head2.head = slow.next


       fast.next = slow.next

       slow.next = self.head

head = Circular()
head1 = Circular()
head2 = Circular()

head.push(2)
head.push(9)
head.push(8)
head.push(3)
head.push(5)

head.printList()

head.split(head1 , head2)
 
print("\nFirst Circular Linked List")
head1.printList()
 
print ("\nSecond Circular Linked List")
head2.printList()
 













        

            


    
